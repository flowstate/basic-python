name: socket-security-workflow
run-name: Socket Security Github Action
on: [push, issue_comment, pull_request]

jobs:
  socket-security:
    permissions:
      issues: write
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && format('refs/heads/{0}', github.event.repository.default_branch) == github.ref) || github.event_name == 'pull_request' || github.event_name == 'issue_comment'}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changed-files
        run: |
            if ${{ github.event_name == 'pull_request' }}; then
                echo "Running PR diff..."
                FILES=$(git diff --name-only -r HEAD^1 HEAD)
                echo "Found files: $FILES"
                echo "changed_files=$FILES" >> $GITHUB_OUTPUT
            else
                echo "Running push diff..."
                FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})
                echo "Found files: $FILES"
                echo "changed_files=$FILES" >> $GITHUB_OUTPUT
            fi
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Get PR State
        run: |
          echo "EVENT_ACTION=synchronize" >> $GITHUB_ENV
      
      - name: Install Socket CLI and SDK
        run: |
            pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ socketsecurity=="${{ inputs.socket_version || '2.0.2.dev7' }}"
            pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ socket-sdk-python=="${{ inputs.sdk_version || '2.0.4.dev195' }}"
      
      - name: Debug Environment
        env:
          SOCKET_SECURITY_API_KEY: ${{ secrets.SOCKET_SECURITY_API_KEY }}
        run: |
          if [ -n "$SOCKET_SECURITY_API_KEY" ]; then
            echo "SOCKET_SECURITY_API_KEY is set"
          else
            echo "SOCKET_SECURITY_API_KEY is not set"
          fi

      - name: Debug Git Info
        run: |
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo "PR_NUMBER: ${{ github.event.pull_request.number }}"
          echo "REPO NAME: ${{ github.event.repository.name }}"
          echo "BRANCH NAME: ${{ github.ref_name }}"
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "EVENT_ACTION: ${{ github.event.action }}"
          echo "EVENT_NAME: ${{ github.event_name }}"
          echo "DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}"
          git rev-parse HEAD

      - name: Run scan
        env:
          SOCKET_SECURITY_API_KEY: ${{ secrets.SOCKET_SECURITY_API_KEY }}
          GH_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          CHANGED_FILES=$(echo "${{ steps.changed-files.outputs.changed_files }}" | tr " " "\n")
          FILES=""
          while IFS= read -r line; do
            FILES="$FILES\"$line\","
          done <<< "$CHANGED_FILES"
          FILES=$(echo $FILES | sed 's/,*$//')
          echo "FILES: $FILES"
          set -x
          # socketcli --files "[$FILES]" --scm github --branch "${{ github.ref_name }}" $(if [ ! -z $DEFAULT_BRANCH ]; then echo "--default_branch"; fi) --committer "$GITHUB_ACTOR" --commit_message "$COMMIT_MESSAGE" --target_path $GITHUB_WORKSPACE
          socketcli --scm github --repo $REPO_NAME  --pr_number $(if [ -z $PR_NUMBER ]; then echo 0; else echo $PR_NUMBER;fi) --branch $GITHUB_HEAD_REF --committers "$GITHUB_ACTOR"  --target-path $GITHUB_WORKSPACE --ignore-commit-files