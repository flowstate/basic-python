name: socket-security-workflow
run-name: Socket Security Github Action
on: [push, issue_comment, pull_request]

jobs:
  socket-security:
    permissions:
      issues: write
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && format('refs/heads/{0}', github.event.repository.default_branch) == github.ref) || github.event_name == 'pull_request' || github.event_name == 'issue_comment'}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}
      
      - name: Get changed files
        id: changed-files
        run: |
            if ${{ github.event_name == 'pull_request' }}; then
                echo "Running PR diff..."
                FILES=$(git diff --name-only -r HEAD^1 HEAD | tr '\n' ' ')
                echo "Found changed files: $FILES"
                echo "changed_files=$FILES" >> $GITHUB_OUTPUT
            else
                echo "Running push diff..."
                FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | tr '\n' ' ')
                echo "Found changed files: $FILES"
                echo "changed_files=$FILES" >> $GITHUB_OUTPUT
            fi
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Get PR State
        if: github.event_name == 'pull_request'
        run: echo "EVENT_ACTION=${{ github.event.action }}" >> $GITHUB_ENV
      
      - name: Install Socket CLI and SDK
        run: |
            pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ socketsecurity=="${{ inputs.socket_version || '2.0.4.dev529' }}"
            pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ socket-sdk-python=="${{ inputs.sdk_version || '2.0.4' }}"
      - name: Check if Default Branch
        if: ${{ always() && format('refs/heads/{0}', github.event.repository.default_branch) == github.ref }}
        run: echo "DEFAULT_BRANCH=1" >> $GITHUB_ENV
      - uses: actions/github-script@v7
        id: get_pr_data
        with:
          script: |
              let data = (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0];
              if (data === undefined) {
                data = {
                  'number': null,
                  'title': null
                }
              }
              
              return data;
      - name: Save Pull Request Number
        run: |
          echo "PR_NUMBER=${{ fromJson(steps.get_pr_data.outputs.result).number || github.event.issue.number || github.event.number }}"  >> $GITHUB_ENV        
      - name: Debug Environment
        env:
          SOCKET_SECURITY_API_KEY: ${{ secrets.SOCKET_SECURITY_API_KEY }}
        run: |
          if [ -n "$SOCKET_SECURITY_API_KEY" ]; then
            echo "SOCKET_SECURITY_API_KEY is set"
          else
            echo "SOCKET_SECURITY_API_KEY is not set"
          fi

      - name: Get Commit Message
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Get message from PR branch (HEAD^2) and escape special characters
            MSG=$(git log -1 --pretty=%B HEAD^2 | sed 's/["`$\\]/\\&/g')
            # Wrap the entire message in quotes when setting the env var
            echo "COMMIT_MESSAGE=\"$MSG\"" >> $GITHUB_ENV
          else
            MSG="${{ github.event.head_commit.message }}"
            # Wrap the entire message in quotes when setting the env var
            echo "COMMIT_MESSAGE=\"$MSG\"" >> $GITHUB_ENV
          fi

      - name: Debug Git Info
        run: |
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo "PR_NUMBER: $PR_NUMBER"
          echo "REPO NAME: ${{ github.event.repository.name }}"
          echo "BRANCH NAME: ${{ github.ref_name }}"
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "EVENT_ACTION: ${{ github.event.action }}"
          echo "EVENT_NAME: ${{ github.event_name }}"
          echo "DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}"
          echo "COMMIT_MESSAGE: $COMMIT_MESSAGE"
          git rev-parse HEAD


      - name: Run scan
        env:
          SOCKET_SECURITY_API_KEY: ${{ secrets.SOCKET_SECURITY_API_KEY }}
          GH_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          CHANGED_FILES=$(echo "${{ steps.changed-files.outputs.changed_files }}" | tr " " "\n")
          FILES=""
          while IFS= read -r line; do
            FILES="$FILES\"$line\","
          done <<< "$CHANGED_FILES"
          FILES=$(echo $FILES | sed 's/,*$//')
          socketcli --scm github --repo "$REPO_NAME" --pr-number "$(if [ -z "$PR_NUMBER" ]; then echo 0; else echo "$PR_NUMBER"; fi)" --branch "$GITHUB_HEAD_REF" --committer "$GITHUB_ACTOR" --commit-message "$COMMIT_MESSAGE" --target-path "$GITHUB_WORKSPACE" --files "[$FILES]"