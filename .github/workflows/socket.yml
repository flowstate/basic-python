name: socket-security-workflow
run-name: Socket Security Github Action
on: 
  push:
  issue_comment:
  pull_request:
  workflow_dispatch:
    inputs:
      socket_version:
        description: 'Version of socketsecurity to install'
        required: false
        default: '2.0.0.dev502'
      sdk_version:
        description: 'Version of socket-sdk-python to install'
        required: false
        default: '2.0.4.dev194'
      use_test_pypi:
        description: 'Use TestPyPI instead of production PyPI'
        required: false
        type: boolean
        default: true

jobs:
  socket-security:
    permissions:
      issues: write
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Get PR State
        run: |
          echo "EVENT_ACTION=opened" >> $GITHUB_ENV
      
      - name: Install Socket CLI and SDK
        run: |
            pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ socketsecurity=="${{ inputs.socket_version || '2.0.2.dev4' }}"
            pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ socket-sdk-python=="${{ inputs.sdk_version || '2.0.4.dev195' }}"
      
      - name: Debug Environment
        env:
          SOCKET_SECURITY_API_KEY: ${{ secrets.SOCKET_SECURITY_API_KEY }}
        run: |
          if [ -n "$SOCKET_SECURITY_API_KEY" ]; then
            echo "SOCKET_SECURITY_API_KEY is set"
          else
            echo "SOCKET_SECURITY_API_KEY is not set"
          fi

      - name: Debug Git Info
        run: |
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          git rev-parse HEAD

      - name: Run scan
        env:
          SOCKET_SECURITY_API_KEY: ${{ secrets.SOCKET_SECURITY_API_KEY }}
          GH_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          CHANGED_FILES=$(echo "${{ steps.changed-files.outputs.changed_files }}" | tr " " "\n")
          FILES=""
          while IFS= read -r line; do
            FILES="$FILES\"$line\","
          done <<< "$CHANGED_FILES"
          FILES=$(echo $FILES | sed 's/,*$//')
          set -x
          # socketcli --files "[$FILES]" --scm github --repo ${{ github.event.repository.name }} --branch "${{ github.ref_name }}" $(if [ ! -z $DEFAULT_BRANCH ]; then echo "--default_branch"; fi) --pr_number $(if [ -z $PR_NUMBER ]; then echo 0; else echo $PR_NUMBER;fi) --committer "$GITHUB_ACTOR" --commit_message "$COMMIT_MESSAGE" --target_path $GITHUB_WORKSPACE
          socketcli --scm github --repo basic-python --branch "eric/fix-things" --pr-number 4 --committers flowstate --commit-message "foo" --target-path $GITHUB_WORKSPACE --ignore-commit-files